Approach 1:
class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n=nums.size();
        vector <int> result;
        
        for (int i=0; i<n; i++){
            int product=1;
            for(int j=0; j<n; j++){
                if(i==j) continue;
                product *=nums[j];
            }
            result.push_back(product);
        }
        return result;  
    }
};


Approach 2:
class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n=nums.size();
        vector <int> result(n);

        result[0]=1;
        for(int i=1; i<n; i++){
            result[i]=result[i-1] * nums[i-1];
        }
        int right=1;
        for(int i=n-1; i>=0; i--){
            result[i] *=right;
            right *=nums[i];
        }
        return result;
    }
};
